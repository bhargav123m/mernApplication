{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAil, USER_LOADED, AUTH_ERROR } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {} catch (e) {}\n}; //Register user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.error;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n\n    dispatch({\n      type: REGISTER_FAil\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAil","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","e","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","error","forEach","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAMA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU,CAAE;AACf,CANM,C,CAQP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMP,QAAN,IAAkB;AACvE,QAAMQ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,WAAX,EAAwBJ,IAAxB,EAA8BF,MAA9B,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAErB,gBADC;AAEPsB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI,KAAjC;;AACA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,OAAP,CAAeD,KAAK,IAAIrB,QAAQ,CAACP,QAAQ,CAAC4B,KAAK,CAACE,GAAP,CAAT,CAAhC;AACD;;AACDvB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEpB;AADC,KAAD,CAAR;AAGD;AACF,CAtBM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAil,\n  USER_LOADED,\n  AUTH_ERROR\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n//Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n  } catch (e) {}\n};\n\n//Register user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post('api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.error;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n    dispatch({\n      type: REGISTER_FAil\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}