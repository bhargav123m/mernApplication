{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POSTS, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; //Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/like/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //remove like\n\nexport const removeLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/unlike/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete('/api/posts/' + id);\n    dispatch({\n      type: DELETE_POSTS,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //ADD Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Added'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/' + id);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //ADD comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts/comment/' + postId, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete('/api/posts/comment/' + postId + '/' + commentId);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: {\n        id: commentId\n      }\n    });\n    dispatch(setAlert('Comment Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POSTS","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","e","msg","response","statusText","status","addLike","postid","patch","id","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POSTS,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from './types';\n\n//Get Posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Add like\nexport const addLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/like/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//remove like\nexport const removeLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/unlike/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete('/api/posts/' + id);\n    dispatch({\n      type: DELETE_POSTS,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//ADD Post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Added'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Get Post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/' + id);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//ADD comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(\n      '/api/posts/comment/' + postId,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(\n      '/api/posts/comment/' + postId + '/' + commentId\n    );\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: {\n        id: commentId\n      }\n    });\n    dispatch(setAlert('Comment Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}