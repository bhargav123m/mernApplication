{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, CLEAR_PROFILE } from './types'; //Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Get profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/user/' + userId);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/github/' + username);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile/education', formData, config);\n    console.log(res);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/experience/delete/' + id);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience removed'));\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete experience\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/education/delete/' + id);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education removed'));\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete Account\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('your account has been permanently removed'));\n    } catch (e) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: e.response.statusText,\n          status: e.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","CLEAR_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","e","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","addEducation","console","log","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE\n} from './types';\n\n//Get current user profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Get all profiles\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Get profile by id\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/user/' + userId);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Get Github repos\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/github/' + username);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Add experience\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Add education\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile/education', formData, config);\n    console.log(res);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added'));\n    history.push('/dashboard');\n  } catch (e) {\n    const errors = e.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg)));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/experience/delete/' + id);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience removed'));\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete experience\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/education/delete/' + id);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education removed'));\n  } catch (e) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete Account\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('your account has been permanently removed'));\n    } catch (e) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: e.response.statusText,\n          status: e.response.status\n        }\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}