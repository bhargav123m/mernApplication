{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POSTS } from './types'; //Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/like/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //remove like\n\nexport const removeLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/unlike/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n}; //Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete('/api/posts/' + id);\n    dispatch({\n      type: DELETE_POSTS,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POSTS","getPosts","dispatch","res","get","type","payload","data","e","msg","response","statusText","status","addLike","postid","patch","id","likes","removeLike","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POSTS } from './types';\n\n//Get Posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Add like\nexport const addLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/like/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//remove like\nexport const removeLike = postid => async dispatch => {\n  try {\n    const res = await axios.patch('/api/posts/unlike/' + postid);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id: postid,\n        likes: res.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n\n//Delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete('/api/posts/' + id);\n    dispatch({\n      type: DELETE_POSTS,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed'));\n  } catch (e) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: e.response.statusText,\n        status: e.response.status\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}