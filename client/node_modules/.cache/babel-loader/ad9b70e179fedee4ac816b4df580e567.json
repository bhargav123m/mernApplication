{"ast":null,"code":"var _jsxFileName = \"/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Back tp profiles\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","getProfileById","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,cADe;AAEfE,EAAAA,KAFe;AAGfC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAHM;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACP,cAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAJJ,CADF;AAWD,CArBD;;AAuBAH,OAAO,CAACO,SAAR,GAAoB;AAClBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAFR;AAGlBL,EAAAA,IAAI,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADiB;AAEhCE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFoB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CACpBc,eADoB,EAEpB;AAAEZ,EAAAA;AAAF,CAFoB,CAAP,CAGbC,OAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: { profile, loading },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles'>Back tp profiles</Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile);\n"]},"metadata":{},"sourceType":"module"}