{"ast":null,"code":"var _jsxFileName = \"/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Github Pages\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : repos.map(repo => console.log(repo) // <div key={repo._id} className='repo bg-white p-1 my-1'>\n  //   <div>\n  //     <h4>\n  //       <a\n  //         href={repo.html_url}\n  //         target='_blank'\n  //         rel='noopener noreferer'\n  //       >\n  //         {repo.name}\n  //       </a>\n  //     </h4>\n  //   </div>\n  // </div>\n  ));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Documents/mernApplication/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","console","log","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,cAAZ;AAA4BI,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACD,GAFQ,EAEN,CAACH,cAAD,CAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGI,KAAK,KAAK,IAAV,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGCA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF,GALJ,CADF;AAyBD,CA7BD;;AA+BAJ,aAAa,CAACO,SAAd,GAA0B;AACxBT,EAAAA,cAAc,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADP;AAExBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,KAAV,CAAgBD,UAFC;AAGxBR,EAAAA,QAAQ,EAAEL,SAAS,CAACe,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcZ;AADW,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbE,aAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary'>Github Pages</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map(repo =>\n          console.log(repo)\n          // <div key={repo._id} className='repo bg-white p-1 my-1'>\n          //   <div>\n          //     <h4>\n          //       <a\n          //         href={repo.html_url}\n          //         target='_blank'\n          //         rel='noopener noreferer'\n          //       >\n          //         {repo.name}\n          //       </a>\n          //     </h4>\n          //   </div>\n          // </div>\n        )\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}